a <- acf(x, lag.max=lag.max.reg, plot=F)
b <- acf(x, lag.max=lag.max, ..., main=main)
r <- lm( log(a$acf) ~ a$lag -1)
lines( exp( b$lag * r$coef[1] ) ~ b$lag, lty=2 )
}
# acf.exp(anomalytemp.ts)
# acf.exp(diff(anomalytemp.ts))
op <- par(mfrow = c(3,1), mar = c(5,4,1,2)+.1)
# tsdisplay(anomalytemp.ts, lag.max=40)
# acf(anomalytemp.ts)
anomalytemp <- read.csv("./anomalytemp.csv")
anomalytemp.ts <- ts(anomalytemp[,2], start=1880, end=2004)
nrp <- length(anomalytemp.ts)
########computing s_1 square
aa<-anomalytemp.ts[2:nrp]
bb<-anomalytemp.ts[1:(nrp-1)]
d1=bb-aa
d1.v=as.vector(d1)
squaresum<- norm(d1.v-mean(d1.v),type="2") * norm(d1.v-mean(d1.v),type="2")
s1.square<- squaresum/(nrp-2)
vario <- 1
for (i in 2:(nrp-1)){
a<-anomalytemp.ts[(i+1):nrp]
b<-anomalytemp.ts[1:(nrp-i)]
dk.i=b-a
dk.v.i=as.vector(dk.i)
squaresum.i<- norm(dk.v.i-mean(dk.v.i),type="2")*norm(dk.v.i-mean(dk.v.i),type="2")
sk.square.i<- squaresum.i/(nrp-i-1)
g.i<-sk.square.i/s1.square
# print(g.i)
vario<-c(vario, g.i)
}
plot.ts(anomalytemp.ts, type="l", ylab="mean surface air temperature", main="The Global Mean Surface Air Temperature Anomaly Time Series")
plot(1:25, vario[1:25], type="l", xlab='Lag', ylab='Variogram', main="Variogram")
acf.exp(anomalytemp.ts, main="Variogram", lag.max=25)
par(op)
span <- 10
span2 <-20
span3 <-40
plot(anomalytemp.ts, type = 'o',
ylab = "",
main = "The Moving Average of Span 10")
lines( filter(anomalytemp.ts, rep(1/span,span), side=2), col = 'red', lwd = 1, type="o")
knitr::opts_chunk$set(echo = FALSE, message=FALSE)
library(knitr)
library(astsa, quietly=TRUE)
library(forecast, quietly=TRUE)
library(tseries, quietly=TRUE)
# http://zoonek2.free.fr/UNIX/48_R/15.html
#
# https://people.duke.edu/~rnau/411arim3.htm
#
# https://anomaly.io/seasonal-trend-decomposition-in-r/
# anomalytemp <- read.csv("./anomalytemp.csv")
# anomalytemp.ts <- ts(anomalytemp[,2], start=1880, end=2004)
# ts.plot(anomalytemp.ts, ylab="mean surface air temperature", main="The Global Mean Surface Air Temperature Anomaly Time Series")
acf.exp <- function (x, main=NULL, lag.max=NULL, lag.max.reg=lag.max, ...) {
a <- acf(x, lag.max=lag.max.reg, plot=F)
b <- acf(x, lag.max=lag.max, ..., main=main)
r <- lm( log(a$acf) ~ a$lag -1)
lines( exp( b$lag * r$coef[1] ) ~ b$lag, lty=2 )
}
# acf.exp(anomalytemp.ts)
# acf.exp(diff(anomalytemp.ts))
op <- par(mfrow = c(3,1), mar = c(5,4,1,2)+.1)
# tsdisplay(anomalytemp.ts, lag.max=40)
# acf(anomalytemp.ts)
anomalytemp <- read.csv("./anomalytemp.csv")
anomalytemp.ts <- ts(anomalytemp[,2], start=1880, end=2004)
nrp <- length(anomalytemp.ts)
########computing s_1 square
aa<-anomalytemp.ts[2:nrp]
bb<-anomalytemp.ts[1:(nrp-1)]
d1=bb-aa
d1.v=as.vector(d1)
squaresum<- norm(d1.v-mean(d1.v),type="2") * norm(d1.v-mean(d1.v),type="2")
s1.square<- squaresum/(nrp-2)
vario <- 1
for (i in 2:(nrp-1)){
a<-anomalytemp.ts[(i+1):nrp]
b<-anomalytemp.ts[1:(nrp-i)]
dk.i=b-a
dk.v.i=as.vector(dk.i)
squaresum.i<- norm(dk.v.i-mean(dk.v.i),type="2")*norm(dk.v.i-mean(dk.v.i),type="2")
sk.square.i<- squaresum.i/(nrp-i-1)
g.i<-sk.square.i/s1.square
# print(g.i)
vario<-c(vario, g.i)
}
plot.ts(anomalytemp.ts, type="l", ylab="mean surface air temperature", main="The Global Mean Surface Air Temperature Anomaly Time Series")
plot(1:25, vario[1:25], type="l", xlab='Lag', ylab='Variogram', main="Variogram")
acf.exp(anomalytemp.ts, main="Variogram", lag.max=25)
par(op)
span <- 10
span2 <-20
span3 <-40
plot(anomalytemp.ts, type = 'o',
ylab = "",
main = "The Moving Average of Span 10")
lines( filter(anomalytemp.ts, rep(1/span,span), side=2), col = 'red', lwd = 1, type="o")
adf.test(anomalytemp.ts, alternative = "stationary")
op <- par(mfrow = c(1,2))
count_d1 = diff(anomalytemp.ts, differences = 1)
plot(anomalytemp.ts, main="Original Time Series")
plot(count_d1, main="Time Series with First Difference")
par(op)
adf.test(count_d1, alternative = "stationary")
adf.test(data$revenue, alternative = "stationary")
adf.test(data$revenue, alternative = "stationary")
op <- par(mfrow = c(1,2))
acf.exp(anomalytemp.ts, lag.max = 25, main="Sample ACF with Original Time Series") # MV(2)
acf.exp(count_d1, lag.max = 25, main="Sample ACF with Difference 1") # MV(2)
par(op)
acf.exp(data$revenue, lag.max = 25, main="Sample ACF with Original Time Series") # MV(2)
acf.exp(data$revenue, lag.max = 50, main="Sample ACF with Original Time Series") # MV(2)
adf.test(data$revenue[800:1050], alternative = "stationary")
data$revenue[800:1050]
acf.exp(data$revenue[800:1050], lag.max = 50, main="Sample ACF with Original Time Series") # MV(2)
plot.ts(data$revenue[800:1050])
data$revenue[800:1050]
ts["2017"]
acf(ts["2017"])
tsData = ts["2017"]
acf(tsData)
tsData
tsData[,1]
acf(tsData[,1])
tsData[,1]
tsData[,1]
as.matrix(tsData[,1])
ss = as.matrix(tsData[,1])
acf(ss)
plot.ts(ss)
testD = data.frame(rev=tsData)
testD
testD = data.frame(rev=tsData, date=rownames(tsData))
testD
testD = data.frame(rev=tsData, date=.index(tsData))
testD
testD = data.frame(rev=tsData, date= .indexDate(tsData))
testD
testD = data.frame(rev=tsData, date= .index(tsData))
testD
ddd = testD %>% group_by(date) %>% mutate(cumRev = cumsum(rev))
ddd
ddd
plot.ts(ddd$cumRev)
plot.ts(ddd$cumRev[1:200])
plot.ts(ddd$rev[1:200])
knitr::opts_chunk$set(echo = FALSE, message=FALSE)
library(knitr)
library(astsa, quietly=TRUE)
library(forecast, quietly=TRUE)
library(tseries, quietly=TRUE)
# http://zoonek2.free.fr/UNIX/48_R/15.html
#
# https://people.duke.edu/~rnau/411arim3.htm
#
# https://anomaly.io/seasonal-trend-decomposition-in-r/
# anomalytemp <- read.csv("./anomalytemp.csv")
# anomalytemp.ts <- ts(anomalytemp[,2], start=1880, end=2004)
# ts.plot(anomalytemp.ts, ylab="mean surface air temperature", main="The Global Mean Surface Air Temperature Anomaly Time Series")
acf.exp <- function (x, main=NULL, lag.max=NULL, lag.max.reg=lag.max, ...) {
a <- acf(x, lag.max=lag.max.reg, plot=F)
b <- acf(x, lag.max=lag.max, ..., main=main)
r <- lm( log(a$acf) ~ a$lag -1)
lines( exp( b$lag * r$coef[1] ) ~ b$lag, lty=2 )
}
# acf.exp(anomalytemp.ts)
# acf.exp(diff(anomalytemp.ts))
op <- par(mfrow = c(3,1), mar = c(5,4,1,2)+.1)
# tsdisplay(anomalytemp.ts, lag.max=40)
# acf(anomalytemp.ts)
anomalytemp <- read.csv("./anomalytemp.csv")
anomalytemp.ts <- ts(anomalytemp[,2], start=1880, end=2004)
nrp <- length(anomalytemp.ts)
########computing s_1 square
aa<-anomalytemp.ts[2:nrp]
bb<-anomalytemp.ts[1:(nrp-1)]
d1=bb-aa
d1.v=as.vector(d1)
squaresum<- norm(d1.v-mean(d1.v),type="2") * norm(d1.v-mean(d1.v),type="2")
s1.square<- squaresum/(nrp-2)
vario <- 1
for (i in 2:(nrp-1)){
a<-anomalytemp.ts[(i+1):nrp]
b<-anomalytemp.ts[1:(nrp-i)]
dk.i=b-a
dk.v.i=as.vector(dk.i)
squaresum.i<- norm(dk.v.i-mean(dk.v.i),type="2")*norm(dk.v.i-mean(dk.v.i),type="2")
sk.square.i<- squaresum.i/(nrp-i-1)
g.i<-sk.square.i/s1.square
# print(g.i)
vario<-c(vario, g.i)
}
plot.ts(anomalytemp.ts, type="l", ylab="mean surface air temperature", main="The Global Mean Surface Air Temperature Anomaly Time Series")
plot(1:25, vario[1:25], type="l", xlab='Lag', ylab='Variogram', main="Variogram")
acf.exp(anomalytemp.ts, main="Variogram", lag.max=25)
par(op)
span <- 10
span2 <-20
span3 <-40
plot(anomalytemp.ts, type = 'o',
ylab = "",
main = "The Moving Average of Span 10")
lines( filter(anomalytemp.ts, rep(1/span,span), side=2), col = 'red', lwd = 1, type="o")
fcast1 <- forecast(fit1, h=5)
shapiro.test(fit1$resid)
set.seed(1)
par(mfrow=c(2,2));
hist(fit1$resid);
set.seed(1)
par(mfrow=c(2,2));
# hist(fit1$resid);
qqnorm(fit1$resid);
tsdiag(fit1)
anomalytemp.ts
fit1 <- arima(anomalytemp.ts , order=c(3,1,2))
fit2 <- arima(anomalytemp.ts , order=c(3,1,4))
order = c("(3,1,2)", "(3,1,4)")
aics = c(fit1$aic, fit2$aic)
kable(data.frame(order, aics))
tsdiag(fit1)
set.seed(1)
par(mfrow=c(2,2));
hist(fit1$resid);
qqnorm(fit1$resid);
qqline(fit1$resid);
plot(fit1$resid, type="l", xlab='Observation Order', ylab='Residual')
acf(fit1$resid)
shapiro.test(fit1$resid)
fcast1 <- forecast(fit1, h=5)
flower.95 = ts(fcast1$lower[,2], start = 2005, end = 2009)
fupper.95 = ts(fcast1$upper[,2], start = 2005, end = 2009)
meanf = ts(fcast1$mean, start = 2005, end = 2009)
plot(anomalytemp.ts, type="o", xlim=c(1880, 2011), ylim=c(-1,1), main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2], start = 2005, end = 2009)
fupper.95 = ts(fcast1$upper[,2], start = 2005, end = 2009)
meanf = ts(fcast1$mean, start = 2005, end = 2009)
plot(anomalytemp.ts, type="o", xlim=c(1880, 2011), ylim=c(-1,1), main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
fcast1
flower.95 = ts(fcast1$lower[,2], start = 2005, end = 2009)
fupper.95 = ts(fcast1$upper[,2], start = 2005, end = 2009)
fcast1$mean
meanf = ts(fcast1$mean, start = 2005, end = 2039)
plot(anomalytemp.ts, type="o", xlim=c(1880, 2011), ylim=c(-1,1), main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
plot(anomalytemp.ts, type="o", xlim=c(1880, 2040), ylim=c(-1,1), main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2], start = 2005, end = 2039)
fupper.95 = ts(fcast1$upper[,2], start = 2005, end = 2039)
meanf = ts(fcast1$mean, start = 2005, end = 2039)
plot(anomalytemp.ts, type="o", xlim=c(1880, 2040), ylim=c(-1,1), main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
plot.ts(ddd$rev[1:200])
fit1 <- arima(ddd$rev[1:200] , order=c(3,1,2))
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2], start = 2005, end = 2039)
fupper.95 = ts(fcast1$upper[,2], start = 2005, end = 2039)
meanf = ts(fcast1$mean, start = 2005, end = 2039)
plot(anomalytemp.ts, type="o", xlim=c(1880, 2040), ylim=c(-1,1), main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
plot(anomalytemp.ts, type="o", xlim=c(1880, 2040), ylim=c(-1,1), main="Forcast next 5 Observations")
anomalytemp.ts <- ddd$rev[1:200]
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2], start = 2005, end = 2039)
fupper.95 = ts(fcast1$upper[,2], start = 2005, end = 2039)
meanf = ts(fcast1$mean, start = 2005, end = 2039)
plot(anomalytemp.ts, type="o", xlim=c(1880, 2040), ylim=c(-1,1), main="Forcast next 5 Observations")
anomalytemp.ts <- ddd$rev[1:200]
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2], start = 2005, end = 2039)
fupper.95 = ts(fcast1$upper[,2], start = 2005, end = 2039)
meanf = ts(fcast1$mean, start = 2005, end = 2039)
plot(anomalytemp.ts, type="o", ylim=c(-1,1), main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
flower.95
fupper.95
fcast1
fit1 <- arima(ddd$rev[1:200] , order=c(4,0,2))
anomalytemp.ts <- ddd$rev[1:200]
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean, start = 2005, end = 2039)
plot(anomalytemp.ts, type="o", ylim=c(-1,1), main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
anomalytemp.ts
anomalytemp.ts <- ddd$rev[1:200]
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean, start = 2005, end = 2039)
plot(anomalytemp.ts, type="o",  main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
anomalytemp.ts <- ddd$rev[1:200]
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean)
plot(anomalytemp.ts, type="o",  main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
fit1 <- arima(ddd$rev[1:200] , order=c(14,0,2))
anomalytemp.ts <- ddd$rev[1:200]
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean)
plot(anomalytemp.ts, type="o",  main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
fit1 <- arima(ddd$rev[1:200] , order=c(15,0,1))
anomalytemp.ts <- ddd$rev[1:200]
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean)
plot(anomalytemp.ts, type="o",  main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
auto.arima(ddd$rev[1:200])
auto.arima(ddd$rev[1:200])
auto.arima(ddd$rev[1:200])
auto.arima(ddd$rev)
fit1 <- arima(ddd$rev , order=c(5,1,0))
anomalytemp.ts <- ddd$rev[1:200]
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean)
plot(anomalytemp.ts, type="o",  main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
fit1
ddd$rev
fit1 <- arima(ddd$rev , order=c(5,0,0))
fit1
?auto.arima(ddd$rev)
auto.arima(ddd$rev, seasonal=TRUE)
auto.arima(ddd$rev, seasonal=TRUE, stationary = TRUE)
fit1 <- arima(ddd$rev , order=c(0,0,1))
fit1
auto.arima(ddd$rev[900:1000], seasonal=TRUE, stationary = TRUE)
fit1 <- arima(ddd$rev , order=c(0,0,1))
auto.arima(ddd$rev[900:1000], seasonal=TRUE, stationary = TRUE)
fit1 <- arima(ddd$rev , order=c(0,0,1))
fit1
auto.arima(ddd$rev[900:1000])
add$rev[900:1000]
add$rev[900:1000]
ddd$rev[900:1000]
plot.ts()
plot.ts(ddd$rev[900:1000])
?ma()
ma(ddd$rev[900:1000])
ma(ddd$rev[900:1000], order=7)
plot.ts(ma(ddd$rev[900:1000], order=7))
plot.ts(ddd$rev[900:1000])
lines(ma(ddd$rev[900:1000], order=7), col="red")
lines(ma(ddd$rev[900:1000], order=1), col="red")
plot.ts(ddd$rev[900:1000])
lines(ma(ddd$rev[900:1000], order=1), col="red")
plot.ts(ddd$rev[900:1000])
lines(ma(ddd$rev[900:1000], order=10), col="red")
plot.ts(ddd$rev)
lines(ma(ddd$rev, order=10), col="red")
plot.ts(ddd$rev)
lines(ma(ddd$rev, order=7), col="red")
ddd %>% mutate(rev = ifelse(rev > 200, ))
# ddd %>% mutate(rev = ifelse(rev > 200, ))
plot.ts(ddd$rev)
lines(ma(ddd$rev, order=7), col="red")
auto.arima(ddd$rev[900:1000])
fit1 <- arima(ddd$rev , order=c(0,0,1))
fit1
auto.arima(ma(ddd$rev, order=7))
acf(ma(ddd$rev, order=7))
dd = ma(ddd$rev, order=7)
dd
dd[-3]
dd[-5]
dd[5:]
dd[+5]
dd[5:length(dd)]
acf(dd[5:length(dd)])
dd[5:length(dd)
dd[5:length(dd)
dd[5:length(dd)]
acf(dd[5:length(dd-20)])
dd[5:length(dd-20)]
plot.ts(dd[5:length(dd-20)])
dd = ma(ddd$rev, order=13)
plot.ts(dd[5:length(dd-20)])
dd = ma(ddd$rev, order=15)
plot.ts(dd[5:length(dd-20)])
dd
drawPlot(log(data))
drawPlot(log(data,2))
log(data,2)
log(data$revenue,2)
plot.ts(log(data$revenue,2))
plot.ts(log(data$revenue,5))
plot.ts(log(data$revenue,5)-1)
plot.ts(log(data$revenue,5)-10)
plot.ts(log(data$revenue,10))
plot.ts(log(data$revenue))
ep.2017 <- endpoints(ts["2017-01-01/2017"],'months')
ep.2017
daymeans.2017 <- period.apply(ts["2017-01-01/2017"], INDEX=ep.2017, FUN=sum, na.rm=F)
nrow(daymeans.2017)
ep.2015 <- endpoints(ts["2015"],'months')
daymeans.2015 <- period.apply(ts["2015"], INDEX=ep.2015, FUN=sum, na.rm=TRUE)
tail(daymeans.2015)
ep.2016 <- endpoints(ts["2016"],'months')
daymeans.2016 <- period.apply(ts["2016"], INDEX=ep.2016, FUN=sum, na.rm=F)
nrow(daymeans.2016)
ep.2017 <- endpoints(ts["2017-01-01/2017"],'months')
daymeans.2017 <- period.apply(ts["2017-01-01/2017"], INDEX=ep.2017, FUN=sum, na.rm=F)
ep.2015
daymeans.2015
salesM = NULL
salesM =  rbind(salesM, daymeans.2015)
salesM
salesM =  rbind(salesM, daymeans.2015)
salesM =  rbind(salesM, daymeans.2016)
salesM =  rbind(salesM, daymeans.2017)
plot(salesM)
auto.arima(salesM)
salesM
as.matrix(salesM)
auto.arima(as.matrix(salesM))
acf(as.matrix(salesM))
auto.arima(as.matrix(salesM))
fit1 <- arima(ddd$rev , order=c(0,1,0))
fit1
fit1 <- arima(as.matrix(salesM) , order=c(0,1,0))
fit1
anomalytemp.ts <- as.matrix(salesM)
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean)
anomalytemp.ts <- as.matrix(salesM)
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean)
plot(anomalytemp.ts, type="o",  main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
meanf
fcast1 <- forecast(fit1, h=35)
fcast1
fit1 <- arima(as.matrix(salesM) , order=c(4,1,0))
fit1
anomalytemp.ts <- as.matrix(salesM)
fcast1 <- forecast(fit1, h=35)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean)
plot(anomalytemp.ts, type="o",  main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
anomalytemp.ts <- as.matrix(salesM)
fcast1 <- forecast(fit1, h=15)
flower.95 = ts(fcast1$lower[,2])
fupper.95 = ts(fcast1$upper[,2])
meanf = ts(fcast1$mean)
plot(anomalytemp.ts, type="o",  main="Forcast next 5 Observations")
lines(meanf, col="darkgreen", lwd = 2, type="o" )
lines(flower.95, col="blue", lwd = 2, type="o" )
lines(fupper.95, col="red", lwd = 2, type="o" )
legend("topleft", c("y", "Forecast", "95% Upper", "95% Lower"), pch=c(16, NA,NA,NA),lwd=c(NA, 3,3,3), cex=1, col=c("black","darkgreen","red","blue"))
