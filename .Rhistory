plot(ts, subset="2017-08", at="chic", plot.type="s", cex.axis=0.75)
plot(ts, subset="2017-09", at="chic", plot.type="s", cex.axis=1.00)
plot(ts, subset="2017-10", at="chic", plot.type="s", cex.axis=1.25)
# plot the close and add a panel with the simple returns
plot(sample.xts[,"Close"])
R <- simple.ret(sample.xts, "Close")
lines(R, type="h", on=NA)
y14<- OrderObj$extractYear(2014)
y15<- OrderObj$extractYear(2015)
y16<- OrderObj$extractYear(2016)
y17<- OrderObj$extractYear(2017)
nrow(y14)
nrow(y15)
nrow(y16)
nrow(y17)
D1 <- OrderObj$extractMonth(1, 2014)
D2 <- OrderObj$extractMonth(2, 2014)
D3 <- OrderObj$extractMonth(3, 2014)
D4 <- OrderObj$extractMonth(4, 2014)
D5 <- OrderObj$extractMonth(5, 2014)
D6 <- OrderObj$extractMonth(6, 2014)
D7 <- OrderObj$extractMonth(7, 2014)
D8 <- OrderObj$extractMonth(8, 2014)
D9 <- OrderObj$extractMonth(9, 2014)
D10 <- OrderObj$extractMonth(10, 2014)
D11 <- OrderObj$extractMonth(11, 2014)
D12 <- OrderObj$extractMonth(12, 2014)
MonthlyTotal2014 <- c(
Jan=sum(D1$OrderTotal),
Fab=sum(D2$OrderTotal),
Mar=sum(D3$OrderTotal),
Apr=sum(D4$OrderTotal),
May=sum(D5$OrderTotal),
Jun=sum(D6$OrderTotal),
Jul=sum(D7$OrderTotal),
Aug=sum(D8$OrderTotal),
Sep=sum(D9$OrderTotal),
Oct=sum(D10$OrderTotal),
Nov=sum(D11$OrderTotal),
Dec=sum(D12$OrderTotal)
)
D1 <- OrderObj$extractMonth(1, 2015)
D2 <- OrderObj$extractMonth(2, 2015)
D3 <- OrderObj$extractMonth(3, 2015)
D4 <- OrderObj$extractMonth(4, 2015)
D5 <- OrderObj$extractMonth(5, 2015)
D6 <- OrderObj$extractMonth(6, 2015)
D7 <- OrderObj$extractMonth(7, 2015)
D8 <- OrderObj$extractMonth(8, 2015)
D9 <- OrderObj$extractMonth(9, 2015)
D10 <- OrderObj$extractMonth(10, 2015)
D11 <- OrderObj$extractMonth(11, 2015)
D12 <- OrderObj$extractMonth(12, 2015)
MonthlyTotal2015 <- c(
Jan=sum(D1$OrderTotal),
Fab=sum(D2$OrderTotal),
Mar=sum(D3$OrderTotal),
Apr=sum(D4$OrderTotal),
May=sum(D5$OrderTotal),
Jun=sum(D6$OrderTotal),
Jul=sum(D7$OrderTotal),
Aug=sum(D8$OrderTotal),
Sep=sum(D9$OrderTotal),
Oct=sum(D10$OrderTotal),
Nov=sum(D11$OrderTotal),
Dec=sum(D12$OrderTotal)
)
D1 <- OrderObj$extractMonth(1, 2016)
D2 <- OrderObj$extractMonth(2, 2016)
D3 <- OrderObj$extractMonth(3, 2016)
D4 <- OrderObj$extractMonth(4, 2016)
D5 <- OrderObj$extractMonth(5, 2016)
D6 <- OrderObj$extractMonth(6, 2016)
D7 <- OrderObj$extractMonth(7, 2016)
D8 <- OrderObj$extractMonth(8, 2016)
D9 <- OrderObj$extractMonth(9, 2016)
D10 <- OrderObj$extractMonth(10, 2016)
D11 <- OrderObj$extractMonth(11, 2016)
D12 <- OrderObj$extractMonth(12, 2016)
MonthlyTotal2016 <- c(
Jan=sum(D1$OrderTotal),
Fab=sum(D2$OrderTotal),
Mar=sum(D3$OrderTotal),
Apr=sum(D4$OrderTotal),
May=sum(D5$OrderTotal),
Jun=sum(D6$OrderTotal),
Jul=sum(D7$OrderTotal),
Aug=sum(D8$OrderTotal),
Sep=sum(D9$OrderTotal),
Oct=sum(D10$OrderTotal),
Nov=sum(D11$OrderTotal),
Dec=sum(D12$OrderTotal)
)
D1 <- OrderObj$extractMonth(1, 2017)
D2 <- OrderObj$extractMonth(2, 2017)
D3 <- OrderObj$extractMonth(3, 2017)
D4 <- OrderObj$extractMonth(4, 2017)
D5 <- OrderObj$extractMonth(5, 2017)
D6 <- OrderObj$extractMonth(6, 2017)
D7 <- OrderObj$extractMonth(7, 2017)
D8 <- OrderObj$extractMonth(8, 2017)
D9 <- OrderObj$extractMonth(9, 2017)
MonthlyTotal2017 <- c(
Jan=sum(D1$OrderTotal),
Fab=sum(D2$OrderTotal),
Mar=sum(D3$OrderTotal),
Apr=sum(D4$OrderTotal),
May=sum(D5$OrderTotal),
Jun=sum(D6$OrderTotal),
Jul=sum(D7$OrderTotal),
Aug=sum(D8$OrderTotal),
Sep=sum(D9$OrderTotal),
Oct=0,
Nov=0,
Dec=0
)
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))
barplot(MonthlyTotal2014, main="Revenues 2014", ylim=c(0, 30000))
barplot(MonthlyTotal2015, main="Revenues 2015", ylim=c(0, 30000))
barplot(MonthlyTotal2016, main="Revenues 2016", ylim=c(0, 30000))
barplot(MonthlyTotal2017, main="Revenues 2017", ylim=c(0, 30000))
sum(MonthlyTotal2014)
sum(MonthlyTotal2015)
sum(MonthlyTotal2016)
sum(MonthlyTotal2017)
ts["2014/2014-12"]
Order <- setRefClass("Order",
fields = list(orgData = "ANY"),
methods = list(
readCSV = function(filePath){
orgData <<- read.csv(filePath, header=T, sep=",")
dates <- orgData %>%  select("Order.Date")
dates = na.omit(dates)
target = as.character(dates$Order.Date)
targetNew <- as.Date(target, format = "%m-%d-%Y")
orgData$Order.Month <<- month(targetNew)
orgData$Order.Year <<- year(targetNew)
orgData$Order.Date <<- targetNew
},
extractMonth = function(month, year){
target = orgData %>%
filter(Order.Month == month & Order.Year ==year) %>%
filter(Order.Status != "Refunded" & Order.Status != "Declined" & Order.Status!="Disputed" ) %>%
select(Order.Date, Order.Status, Product.Details, OrderTotal)
return (target)
},
extractYear = function(year){
target = orgData %>%
filter(Order.Year ==year) %>%
filter(Order.Status != "Refunded" & Order.Status != "Declined" & Order.Status!="Disputed" ) %>%
select(Order.Date, Order.Status, Product.Details, OrderTotal)
return (target)
},
drawPlot = function(){
}
)
)
## Extracting
library(dplyr)
library(lubridate)
Order <- setRefClass("Order",
fields = list(orgData = "ANY"),
methods = list(
readCSV = function(filePath){
orgData <<- read.csv(filePath, header=T, sep=",")
dates <- orgData %>%  select("Order.Date")
dates = na.omit(dates)
target = as.character(dates$Order.Date)
targetNew <- as.Date(target, format = "%m-%d-%Y")
orgData$Order.Month <<- month(targetNew)
orgData$Order.Year <<- year(targetNew)
orgData$Order.Date <<- targetNew
},
extractMonth = function(month, year){
target = orgData %>%
filter(Order.Month == month & Order.Year ==year) %>%
filter(Order.Status != "Refunded" & Order.Status != "Declined" & Order.Status!="Disputed" ) %>%
select(Order.Date, Order.Status, Product.Details, OrderTotal)
return (target)
},
extractYear = function(year){
target = orgData %>%
filter(Order.Year ==year) %>%
filter(Order.Status != "Refunded" & Order.Status != "Declined" & Order.Status!="Disputed" ) %>%
select(Order.Date, Order.Status, Product.Details, OrderTotal)
return (target)
},
drawPlot = function(){
}
)
)
orderData <- read.csv("./orders-2017-11-19-2.csv")
str(orderData)
colnames(orderData) <- c("orderId", "status", "date", "time", "total",
"custID", "email", "prodDetail", "tranID")
length(str(orderData))
length(str(orderData))
length(calnames(orderData))
length(colnames(orderData))
colnames(orderData)
colnames(orderData) <- c("orderId", "status", "date", "time", "total",
"custID", "prodDetail", "tranID")
orderData$date = as.Date(orderData$date, "%m-%d-%Y")
normOrder <- orderData %>% mutate(dateAll = paste(date, time, sep=" "))
normOrder$dateAll = as.POSIXlt.character(normOrder$dateAll)
library(xts)
library(lubridate)
data(sample_matrix)
sample.xts <- as.xts(sample_matrix)
newNorm <- normOrder %>% select(total, dateAll)
newNorm$total <- as.numeric(newNorm$total)
ts <- xts(newNorm$total, order.by=newNorm$dateAll)
ts
normOrder$dateAll
normOrder <- orderData %>% mutate(dateAll = paste(date, time, sep=" "))
normOrder$dateAll
orderData$date
orderData <- read.csv("./orders-2017-11-19-2.csv")
nrow(orderData)
colnames(orderData) <- c("orderId", "status", "date", "time", "total",
"custID", "prodDetail", "tranID")
head(orderData)
orderData[1,]
orderData$date
gsub("/","-", orderData$date)
orderData$date = gsub("/","-", orderData$date)
orderData$date = as.Date(orderData$date, "%m-%d-%Y")
orderData$date
normOrder <- orderData %>% mutate(dateAll = paste(date, time, sep=" "))
normOrder$dateAll = as.POSIXlt.character(normOrder$dateAll)
library(xts)
library(lubridate)
newNorm <- normOrder %>% select(total, dateAll)
newNorm$total <- as.numeric(newNorm$total)
ts <- xts(newNorm$total, order.by=newNorm$dateAll)
yearly <- to.yearly(ts)
monthly <- to.monthly(ts)
quarterly <- to.quarterly(ts)
period <- to.period(ts,period="years")
yearly
plot(monthly, main="Time Series monthly")
monthly <- to.monthly(ts)
quarterly <- to.quarterly(ts)
period <- to.period(ts,period="years")
plot(monthly, main="Time Series monthly")
monthly
plot(monthly, main="Time Series monthly")
y2014 <- ts["2014/2014-12"]
y2014
y2015 <- ts["2015/2015-12"]
y2016 <- ts["2016-10"]
sum(y2016)
y2017.05 <- ts["2017-05"]
plot(y2017.05)
y2017.05
plot(y2017.05[,1])
plot(y2017.05)
plot(y2017.01)
y2017.01 <- ts["2017-01"]
y2017.02 <- ts["2017-02"]
y2017.03 <- ts["2017-03"]
y2017.04 <- ts["2017-04"]
y2017.05 <- ts["2017-05"]
plot(y2017.01)
plot(y2017.02)
plot(y2017.03)
plot(y2017.05)
plot(monthly, main="Time Series monthly")
plot(quarterly, main="Time Series quarterly")
plot(period, main="Time Series quarterly")
quarterly
plot.ts(quarterly)
plot.ts(quarterly[1])
plot.ts(quarterly[,1])
quarterly[,1]
plot.ts(quarterly[,1])
ts(quarterly[,1])
dd = ts(quarterly[,1])
plot.ts(dd)
plot(monthly, main="Time Series monthly")
daily <- to.daily(ts)
plot.ts(daily)
plot(daily)
daily
plot(daily[,2])
plot(monthly[,2])
test <- to.daily(y2017.05)
test
test <- to.daily(ts["2017"])
test
plot(test)
plot(test[,2])
plot(test[,1])
plot(daily[,1])
plot(daily[,3])
plot(daily[,4])
daily
# plot a subset of the data
plot(ts, subset="2017-11-01")
plot(ts, subset="2017-11-02")
plot(ts["2017-04-01"],
type='l',
xlim=as.POSIXct(c("2017-04-01 00:00:00","2012-04-02 00:00:00"))
)
plot(ts["2017-04-01"],
type='l',
xlim=as.POSIXct(c("2017-04-01 00:00:00","2012-04-10 00:00:00"))
)
plot(ts["2017-04"],
type='l',
xlim=as.POSIXct(c("2017-04-01 00:00:00","2012-04-10 00:00:00"))
)
plot(ts["2017-04"],
type='l',
xlim=as.POSIXct(c("2017-04-01 00:00:00","2012-04-30 00:00:00"))
)
plot(ts["2017-04"],
type='l',
xlim=as.POSIXct(c("2017-04-01 00:00:00","2012-04-31 00:00:00"))
)
plot(ts["2017-04"],
type='l',
xlim=as.POSIXct(c("2017-04-01 00:00:00","2012-04-30 23:00:00"))
)
plot(ts["2017-04"],
type='l',
xlim=as.POSIXct(c("2017-04-01 00:00:00","2012-04-30 00:00:00"))
)
plot(ts["2017-04"],
type='l',
xlim=as.POSIXct(c("2017-04-01 00:00:00","2017-04-30 00:00:00"))
)
plot(ts["2017-05"],
type='l',
xlim=as.POSIXct(c("2017-05-01 00:00:00","2017-05-31 00:00:00"))
)
plot(ts["2017-06"],
type='l',
xlim=as.POSIXct(c("2017-06-01 00:00:00","2017-06-31 00:00:00"))
)
plot(ts["2017-06"],
type='l',
xlim=as.POSIXct(c("2017-06-01 00:00:00","2017-06-30 00:00:00"))
)
plot(ts["2017-07"],
type='l',
xlim=as.POSIXct(c("2017-06-01 00:00:00","2017-06-30 00:00:00"))
)
plot(ts["2017-08"],
type='l',
xlim=as.POSIXct(c("2017-06-01 00:00:00","2017-06-30 00:00:00"))
)
ts["2014/2014-12"]
ts["2014"]
.indexwday(ts["2014"])
ts["2014"]
.indexwday(ts["2014/5"])
.indexwday(ts["2014-5"])
to.daily(ts["2014-5"])
ts["2014-5"]
to.daily(ts["2014-5"])
ts["2014-5"]
to.daily(ts["2014-5"])
ts["2014-5"]
ts["2014-5-26"]
ts["2014-5"]
ts["2014-5"]
str(ts["2014-5"])
ddd = ts["2014-5"]
ddd = ts["20160101"]
ddd
ddd = ts["201601"]
ddd
to.daily(ddd)
head(ddd)
head(to.daily(ddd) )
.indexDate(ts["201601"])
.indexday(ts["201601"])
ts["201601"]
.index(ts["201601"])
.indexwday(ts["201601"])
table(.indexwday(ts["201601"]))
table(.indexwday(ts["2016"]))
table(.indexwday(ts["2017"]))
table(.indexwday(ts["2014"]))
table(.indexwday(ts["2015"]))
table(.indexwday(ts["2016"]))
table(.indexwday(ts["2017"]))
hist(table(.indexwday(ts["2016"])))
hist(table(.indexwday(ts["2016"])))
boxplot(table(.indexwday(ts["2016"])))
table(.indexwday(ts["2016"]))
plot(table(.indexwday(ts["2016"])))
par(mfrow=c(2,2))
plot(table(.indexwday(ts["2016"])))
plot(table(.indexwday(ts["2015"])))
plot(table(.indexwday(ts["2016"])))
plot(table(.indexwday(ts["2017"])))
par(mfrow=c(2,2))
plot(table(.indexwday(ts["2016"])), ylim=c(0,700))
plot(table(.indexwday(ts["2015"])), ylim=c(0,700))
plot(table(.indexwday(ts["2016"])), ylim=c(0,700))
plot(table(.indexwday(ts["2017"])), ylim=c(0,700))
plot(table(.indexwday(ts["201601"])), ylim=c(0,700))
plot(table(.indexwday(ts["201601"])))
par(mfrow=c(4,4))
plot(table(.indexwday(ts["201601"])))
plot(table(.indexwday(ts["201602"])))
plot(table(.indexwday(ts["201603"])))
plot(table(.indexwday(ts["201604"])))
plot(table(.indexwday(ts["201605"])))
plot(table(.indexwday(ts["201606"])))
plot(table(.indexwday(ts["201607"])))
plot(table(.indexwday(ts["201608"])))
par(mfrow=c(2,4))
plot(table(.indexwday(ts["201601"])))
plot(table(.indexwday(ts["201602"])))
plot(table(.indexwday(ts["201603"])))
plot(table(.indexwday(ts["201604"])))
plot(table(.indexwday(ts["201605"])))
plot(table(.indexwday(ts["201606"])))
plot(table(.indexwday(ts["201607"])))
plot(table(.indexwday(ts["201608"])))
par(mfrow=c(3,4))
plot(table(.indexwday(ts["201601"])))
plot(table(.indexwday(ts["201602"])))
plot(table(.indexwday(ts["201603"])))
plot(table(.indexwday(ts["201604"])))
plot(table(.indexwday(ts["201605"])))
plot(table(.indexwday(ts["201606"])))
plot(table(.indexwday(ts["201607"])))
plot(table(.indexwday(ts["201608"])))
plot(table(.indexwday(ts["201609"])))
plot(table(.indexwday(ts["201610"])))
plot(table(.indexwday(ts["201611"])))
plot(table(.indexwday(ts["201612"])))
par(mfrow=c(3,4))
plot(table(.indexhour(ts["201601"])))
plot(table(.indexhour(ts["201602"])))
plot(table(.indexhour(ts["201603"])))
plot(table(.indexhour(ts["201604"])))
plot(table(.indexhour(ts["201605"])))
plot(table(.indexhour(ts["201606"])))
plot(table(.indexhour(ts["201607"])))
plot(table(.indexhour(ts["201608"])))
plot(table(.indexhour(ts["201609"])))
plot(table(.indexhour(ts["201610"])))
plot(table(.indexhour(ts["201611"])))
plot(table(.indexhour(ts["201612"])))
finalCust <- newCust %>% filter(country == "United States") %>%
filter( state %in% c("SD")) %>% select(custID)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE)
library(knitr)
library(dplyr)
library(pander)
# https://www.researchgate.net/publication/228150296_A_Time-Series_Analysis_of_US_E-Commerce_Sales
customer = read.csv("./customers-2017-11-19.csv")
newCust = customer[,1:5]
product = read.csv("./products-2017-08-06.csv")
orders = read.csv("./orders-2017-11-19-2.csv")
summary(product$Calculated.Price)
barplot(product$Calculated.Price)
barplot(product$Retail.Price)
summary(product$Retail.Price)
str(product$Product.Type)
str(product$Brand)
# barplot(y = table(product$Brand), x = names(table(product$Brand)))
freq = table(product$Brand)
freqT = data.frame(freq)
freqT$Freq
# names[1] = "idx1"
# names = as.factor(names)
#
# freqT$Freq # value
# names      # names
# plot(freqT$Freq, names)
#
# brandTable = data.frame(names = names, freq = freqT$Freq)
# plot(brandTable[1:100,1], y=brandTable[1:100,2], xlim=c(1,100), ylim=c(1, 300))
# plot(brandTable[101:200,1], y=brandTable[101:200,2])
# numPrd <- nrow(product)
# numCust <- nrow(customer)
# numOrd <- nrow(orders)
# df <- data.frame(numPrd, numCust, numOrd)
# colnames(df) <- c("Products", "Customers", "Orders")
# rownames(df) <- c("Total Number of Records")
# kable(df)
# pandoc.table(df)
# finalPrd <- product %>% select(Product.ID, Brand, Calculated.Price)
# kable(summary.data.frame(finalPrd))
# pandoc.table(summary.data.frame(finalPrd))
# finalOrd <- orders %>% select(Order.ID, Order.Status, Order.Date, Order.Total..inc.tax., Customer.ID)
# kable(summary.data.frame(finalOrd))
#
# pandoc.table(summary.data.frame(finalOrd), split.table = Inf)
# finalCust <- customer %>% select(Customer.ID, Addresses)
# kable(summary.data.frame(finalCust))
# pandoc.table(summary.data.frame(finalCust))
abbState = c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA","HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA","MA","MD", "ME","MI", "MN", "MO", "MS",  "MT", "NC", "ND", "NE", "NH", "NJ", "NM","NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN","TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY")
colnames(newCust) <-c("custID", "orders", "state", "zip", "country")
finalCust <- newCust %>% filter(country == "United States") %>%
filter( state %in% abbState & orders >0 ) %>%
count(state) %>% arrange(desc(n))
kable(finalCust)
finalCust <- newCust %>% filter(country == "United States") %>%
filter( state %in% c("SD")) %>% select(custID)
finalCust
custList.ca = unlist(finalCust)
custList.ca
knitr::opts_chunk$set(echo = TRUE)
library(tsfeatures)
install.packages("tsfeatures")
